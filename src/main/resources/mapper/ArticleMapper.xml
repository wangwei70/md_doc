<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.better.mapper.ArticleMapper">

    <resultMap id="BaseResultMap" type="com.better.bean.Article">

        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="summary" column="summary" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="author" column="author" jdbcType="VARCHAR"/>
        <result property="directoryId" column="directory_id" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="sortNum" column="sort_num" jdbcType="INTEGER"/>
        <result property="deleteFlag" column="delete_flag" jdbcType="TINYINT"/>
        <result property="keyword" column="keyword" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="seoTitle" column="seo_title" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="queryBriefColumn">
        id,
        title,
        summary,
        author,
        directory_id as directoryId,
        update_time as updateTime,
        create_time as createTime,
        user_id as userId,
        description,
        absolute_path as absolutePath
    </sql>


    <select id="selectByDirectoryId" resultType="com.better.bean.Article">
            select <include refid="queryBriefColumn"/> from article
                     where delete_flag = 0
                       and directory_id = #{directoryId}
    </select>


    <select id="selectByKeyword" resultType="com.better.bean.ArticleVo">
        select
          <include refid="queryBriefColumn"/>,
          ts_headline('chinese_zh',art.html_content,t.keyword) as htmlSummary
        from
            (select
                (
                    select array_to_string(
                        string_to_array(
                          replace(strip(to_tsvector('chinese_zh',#{keyword}))::varchar,'''',''),' '
                        ),' | '
                    )
                )::tsquery as keyword
            ) t
        inner join article art on t.keyword @@ art.search_content
    </select>


    <select id="selectAll" resultType="com.better.bean.Article">
        select * from article where delete_flag = 0 order by sort_num;
    </select>


    <select id="selectAllNoContent" resultMap="BaseResultMap">
        select id,directory_id,sort_num,title,url from article where delete_flag = 0 order by sort_num;
    </select>


    <select id="selectById" resultType="com.better.bean.Article">
        select * from article where delete_flag = 0 and id = #{id};
    </select>
    <select id="selectAllByTitle" resultMap="BaseResultMap">
        select
        *
        from article
        where
        title = #{title,jdbcType=VARCHAR}
    </select>
    <select id="selectAllByTitleAndDirectoryId" resultMap="BaseResultMap">
        select
        *
        from article
        where
        title = #{title,jdbcType=VARCHAR}
        AND directory_id = #{directoryId,jdbcType=NUMERIC}
        AND delete_flag = 0
    </select>
    <insert id="insertBatch">
        insert into article(title,
        directory_id,create_time,
        user_id,absolute_path)
        values
        <foreach collection="articleCollection" item="item" separator=",">
            (#{item.title,jdbcType=VARCHAR},
            #{item.directoryId,jdbcType=NUMERIC},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.userId},
            #{item.absolutePath,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

</mapper>
